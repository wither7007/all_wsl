
qa('.menu-item-object-category')
mm.reduce((acc,i)=>{\n    if (i in acc){\n        acc[i]++\n    }\n    else {\n        acc[i]=1\n    }\n    return acc}, {})
mm.reduce((acc,i)=>{\n    if (i in acc){\n        acc[i]++\n    }\n    else {\n        acc[i]=i\n    }\n    return acc}, {})
mm.reduce((acc,i)=>{\n    if (i in acc){\n        acc[i]++\n    }\n    else {\n        acc[i]=i\n    }\n    return acc, {})
mm=String(sc).split(',')
String(sc).split(',')
String(sc)
sc
u.forEach(a=>sc.push(a.split(/\\s/)))
u.forEach(a=>log(a.split(/\\s/)))
u.forEach(a=>a.split(/\\s/))
u
u.forEach(a=>a.split(/\\s/)).forEach(a=>log(a))
u.forEach(a=>a.split(/\\s/)).forEach(a=>log(a)))
u.forEach(a=>log(a.split(/\\s/))
u[0]
u.forEach(a=>log(a))
u.forEach(a=>log(typeof a))
a
u=qa('[class]').map(a=>a.className)\nsc=[]\nu.forEach(a=>a.forEach(x=>sc.push(x)))
u=qa('[class]').map(a=>a.className)
u=qa('[class]')
w.forEach(a=>a.forEach(x=>sc.push(x)))
w.forEach(a=>a.forEach(x=>log(x)))
sc=[]
w[3].forEach(a=>sc.push(a))
w[3]
w
log(w.join('\\n'))
w[0].join(' ')
w.forEach(a=>{\n    log(a)\n})
copy(JSON.stringify(w,null,2))
log(JSON.stringify(w,null,2))
JSON.stringify(w,null,2)
w.join(' xxx ')
w.forEach(a=>log(a))
w=qa('[class]').map(a=>a.className.split(' ')).slice(0,4)
qa('[class]').map(a=>a.className.split(' ')).slice(0,4)
qa('[class]').map(a=>a.className.split(' '))
qa('[class]').map(a=>a.className.split(' ')).join(' ')
qa('[class]').map(a=>a.className.split(' '))[0]
qa('[class]').map(a=>a.className.split(' '))[1]
cl[0]
cl
qa('[class]').forEach(a=>cl.push(a.className.split(/\\s/)))
cl=[]
qa('[class]').forEach(a=>log(a.className.split(/\\s/)))
qa('[class]').forEach(a=>log(a.className.split(/\\s/))
qa('[class]').forEach(a=>log(a.className))
qa('[class]')
'jim'.search('i')
document.body.prepend(pr)
pr.textContent=sword('indexof')[31].parentNode.parentNode.parentNode.textContent
pr=document.createElement('pre')
document.body.prepend(d)
d.innerHTML=sword('indexof')[31].parentNode.parentNode.parentNode.textContent
d=document.createElement('div')
sword('indexof')[31].parentNode.parentNode.parentNode.textContent
sword('indexof')[31].parentNode.parentNode.parentNode
sword('indexof')[31].parentNode.parentNode.textContent
sword('indexof')[31].parentNode.parentNode
sword('indexof')[31].parentNode
sword('indexof')[31].parent
sword('indexof')[31]
qa('strong')
qs('strong')
sword('indexof')
window.elements = [...document.querySelectorAll('*:not(head, body, html,meta,script)')]\n
elements
sword('alphabet')
sword('alphabet')[20].textContent.slice(700,740)
sword('alphabet')[20].textContent.match(/alpha/i)
sword('alphabet')[20].textContent.match('alpha')
sword
sword('alphabet')[20].textContent.search('alpha')
sword('alphabet')[20].textContent.find('alpha')
sword('alphabet')[20].textContent
sword('alphabet')[20]
sword('beta')
sword('alpha')
qs('pre').style.columns=2
qs('pre').textContent=tt.map((a,i)=>`${i} ${a}`)
qs('pre').textContent=tt.forEach((a,i)=>log(`${i} ${a}`))
tt.forEach((a,i)=>log(`${i} ${a}`))
tt.forEach((a,i)=>log(`${i} ${a}`)
tt=t.split(' ,').filter(a=>a.length>1)
t.split(' ,').filter(a=>a.length>1)
t.split(' ,').filter(a=>a.length>0)
t.split(' ,')
t=t.replaceAll('\\n',' ,')
t.replaceAll('\\n',' ,')
t
qs('pre').style.fontSize='2rem'
    pr.innerHTML=t.split(', ')
    p.innerHTML=t.split(', ')
typeof t
t=sword('alpha')[0].innerHTML.replaceAll('<br>','')
log(sword('alpha')[0].innerHTML.replaceAll('<br>',''))
log(sword('alpha')[0].innerHTML.replaceAll('<br>','\\n'))
sword('alpha')[0].innerHTML.replaceAll('<br>','\\n')
sword('alpha')[0].textContent
sword('alpha')[0].innerHTML
sword('alpha'
gr.replaceAll('\\n','\\t').trim().split('\\t')
gr.replaceAll('\\n','\\t').split('\\t').trim()
gr.replaceAll('\\n','\\t').split('\\t')
gr.replaceAll('\\n',' ').split('\\t')
gr.replaceAll('\\n','').split('\\t')
gr.replaceAll('\\n','')
gr
gr.split('\\t')
d.innerHTML=gr.split('\\t').map(a=>`${a} <br>`)
d.innerHTML=gr.split('\\t').map(`${a} <br>`)
gr=`Αα\tAlpha\tΝν\tNu\nΒβ\tBeta\tΞξ\tXi\nΓγ\tGamma\tΟο\tOmicron\nΔδ\tDelta\tΠπ\tPi\nΕε\tEpsilon\tΡρ\tRho\nΖζ\tZeta\tΣσς\tSigma\nΗη\tEta\tΤτ\tTau\nΘθ\tTheta\tΥυ\tUpsilon\nΙι\tIota\tΦφ\tPhi\nΚκ\tKappa\tΧχ\tChi\nΛλ\tLambda\tΨψ\tPsi\nΜμ\tMu\tΩω\tOmega\n`
ss[1]
ss=[]\nfor ( a in it) {ss.push([a, it[a]])}
it.title='new'
it
ss
it.replaceChild
it=qs('pre')\nfor ( a in it) {log([a, it[a]])}
it=qs('pre')\nfor ( a in it) {log([a, it[a])}
it=qs('pre')\nfor ( a in it) {log(a)}
it=qs('pre')\nfor ( a in it) {log(x)}
for ( a in qs('pre')) {log(a)}
for ( a in qs('pre')) {log(x)}
attrs
element.setAttribute('data-id','x')\n// ✅ Get object of all {name: value}\nconst attrs = element.getAttributeNames().reduce((acc, name) => {\n  return {...acc, [name]: element.getAttribute(name)};\n}, {});
const attrs = element.getAttributeNames().reduce((acc, name) => {\n  return {...acc, [name]: element.getAttribute(name)};\n}, {});\n
qq
qq.setAttribute('x','x')
element.data-id=\"xx\"
const element = document.querySelector('pre');\n\n// ✅ Get object of all {name: value}\nconst attrs = element.getAttributeNames().reduce((acc, name) => {\n  return {...acc, [name]: element.getAttribute(name)};\n}, {});
const element = document.qs('pre');\n\n// ✅ Get object of all {name: value}\nconst attrs = element.getAttributeNames().reduce((acc, name) => {\n  return {...acc, [name]: element.getAttribute(name)};\n}, {});
for (a of qq.attributes) log(`${a.name} => ${a.value}`)
qq.className='jjj'
for (a of qq.attributes) log(a.name)
for (a of qq.attributes) log(a)
qq.attributes
qq=qs('pre')
qs('pre').hasAttributes()
qs('pre').hasAttributes(0
q.hasAttributes()
q.className='x'
q.hasAttribute()
q.hasAttribute(0
Object.getOwnPropertyNames(q)
q=qs('body')
q
parseInt(12,2)
parseInt(12)
parseInt(2)
parent(2)
JSON.stringify(k)
k.x
k
k.x='bill'
met(k)
k.lo
k.lo()
k.lo=function s(){log('x')}
k.lo=function s(){log('x'}
k='jim'
met('jim')
String.raw('jim')
'jim'.raw()
met(undefinedObject)
const undefinedObject = String
const undefinedObject = 'jim'
met
undefinedObject
const undefinedObject = null;
const undefinedObject = undefined;
Number.EPSILON
console.log(0.1 + 0.2); 
typeof Number.EPSILON
typeof Number.parseFloat
typeof Number.length
Object.getOwnPropertyNames(Number)
Math.E
Object.getOwnPropertyNames(Math)
Object.getOwnPropertyDescriptor(Math)
met(Error)
try {xx(23)}\ncatch(error) {log(error.message)}
try {xx(22)}\ncatch(error) {log(error.message)}
try {xx(23)}\ncatch(error) {log(error)}
try {xx(23)}\ncatch(error) {log('what')}
xx(23)
xx(22)
xx(99)
function xx (n=2) {\n    if (n%2==1) {throw new Error('not even')}\n   log(n) \n}
xx(2)
function xx (n=2) {\n    if (n%2==1) {log('not even')}\n   log(n) \n}
xx(3)
function xx (n=2) {\n    if (n%2==0) {log('not even')}\n   log(n) \n}
function xx (n=2) {\n    if n%2==0 {log('not even')}\n   log(n) \n}
3%2
xx()
function xx (n=2) {\n   log(n) \n}
for (x in a) {if (typeof a[x]=='function') {log(x)}}
a.onpagehide
copy(ss.join('\\n'))
cp(ss.join('\\n'))
for (x in a) {ss.push([x,typeof a[x]])}
ss=[]
for (x in a) {log([x,typeof a[x]])}
for (x in a) {log([a,typeof a[x]])}
for (x in a) {log(typeof a[x])}
typeof a.normalize
for (x in a) {log(x)}
for (x in a) {log(typeof x)}
for (x in a) {log(typeof x}
for (x in a) {if (typeof x=='function') {log(x)}}
for (x in a) {if (typeof x=='function' {log(x)}}
for (x in a) log(x)
Object.values(a)
a=qs('body')
met(Object)
met(Math)
met(Array)
Object.getOwnPropertyNames(qs('body'))
met(Number)
function met(obj) {\n    return Object.getOwnPropertyNames(obj).filter(function(property) {\n        return typeof obj[property] == \"function\";\n    });\n}
Number
for (a of Number) log(a)
Object.keys(Number)
for (a in Number) log(a)
Number.isInteger(3.2)
Number.isInteger(3)
x=2
$0.style.fontSize='36px'
$0.style.fontSize
$0.style.fontSize='12rem'
$0.style.fontSize='2rem'
getComputedStyle($0).font
getComputedStyle($0)
qs('style')
f=qa('link[rel*=\"style\"]')[0].remove()
copy(st)
st
fetch(f).then(x=>x.text()).then(y=>st=y)
fetch(f).then(x=>x.text()).then(y=>st=y))
st=``
fetch(f).then(x=>x.text()).then(y=>log(y))
f=qa('link[rel*=\"style\"]')[0].href
qa('link[rel*=\"style\"]')[0].href
qa('link[rel*=\"style\"]')
qa('link[rel=\"stylesheet\"]')
qs('link[rel=\"stylesheet\"]')
document.querySelector('head').querySelectorAll('link')
window.close()
history.back()
copy(ss.map(a=>a.replace(/\\s{2,}/g,'\\n')))
ss.map(a=>a.replace(/\\s{2,}/g,'\\n'))
ss.map(a=>a.replace(/\\s{2,}/,'\\n'))
qa('.commtext').forEach(a=>ss.push(a.textContent))
qa('.commtext').forEach(a=>log(a.textContent))
qa('[class*=\"totalReact\"]').forEach(a=>log(a.textContent))
qa('[class*=\"totalReact\"]')
$0.nextElementSibling.nextElementSibling.className
$0.nextElementSibling.nextElementSibling
$0.textContent
qa('.coral-comment-content')[0].parentElement.children\n
qa('.coral-comment-content')[0].parentElement\n
qa('.coral-comment-content')[0].children.length\n
qa('.coral-comment-content')[0].children\n
qa('.coral-comment-content')[0]\n
qa('.coral-comment-content').forEach((a,i)=>log(`${i} - ${a.textContent}`))\n
qa('.coral-comment-content').forEach(a=>log(a.textContent))
qs('#comments-loadMore').click()
sword('load more')[8]
sword('load more')[9]
sword('load more')
window.sword = (x) => {\n    window.elements = [...document.querySelectorAll('*:not(head, body, html,meta)')]\n    var expression = `${x}`;\n    var re = new RegExp(expression, 'gi');\n    console.log(re)\n    let word = window.elements.filter(aa => aa.textContent.match(re))\n    return word\n}
$0.id
sword('load more')[0].innerHTML
sword('load more')[0]
$0.parentElement.classList
qs('span.comments-show').click()
qs('span.comments-show')
sword('show comm')
qs('.coral').children[1].innerHTML
qs('.coral').children[1].textContent
qs('.coral').children[1]
qs('.coral').children
qs('.coral')
$0.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.children
$0.parentElement.children
$0.parentElement
$0
sword('show comm')[7].click()
sword('show comm')[7]
sword('Another Bowl')
copy(qa('.coral')[0].textContent)
qa('.coral')[0].textContent
qa('.coral')[0].innerHTML
qa('.coral')[0]
qa('.coral').forEach(a=>log(a.textContent))
qa('.coral')
swor('Another Bowl')
$0.click()
sword('show comments')[7].click()
sword('show comments')[7]
sword('show comments')
copy(sc)
sc=sc.join('\\n')
sc[1]
qa('script').forEach((a,i)=>sc.push([`${i} ${a.src} ${a.textContent}`]))
gel
let gscript = await \"https://raw.githubusercontent.com/wither7007/htmlTemplate/main/html/events.js\";\nlet mytext\nlet n = async () => {\n    let gscript = await \"https://raw.githubusercontent.com/wither7007/htmlTemplate/main/html/events.js\";\n    let res = await fetch(gscript)\n    let j = await res.text()\n    let mytext = j\n    eval(mytext)\n    console.log(j)\n}\nn()\n
qa('script').forEach((a,i)=>sc.push([`${i} ${a.src} ${a.textContent}`)])
qa('script').forEach((a,i)=>log(`${i} ${a.src} ${a.textContent}`))
qa('script').forEach((a,i)=>log(`${i} ${a.src}`))
qa('script').forEach((a,i)=>log(${i} ${a.src}))
qa('script').forEach(a=>log(a))
qa('script').forEach(a=>log(a.src))
qa('script').length
qa('script')
qs('div.Dropdown').outerHTML
qs('div.Dropdown')
sword('all time')
sword('all time')[7].value
sword('all time')[7]
sword('search')[6].querySelector('input').style='color:#00f'
sword('search')[6].querySelector('input').style='color:#f00'
sword('search')[6].querySelector('input')
sword('search')[6].querySelector('button')
sword('search')[6].children[0].value
sword('search')[6].children[0]
sword('search')[6].children
sword('search')[6].children[1]
sword('search')[6].value='none'
sword('search')[6]
sword('search')
history.back
sword('space.*exp')[10].click()
sword('space.*exp')[10].href.click()
sword('space.*exp')[10].href
sword('space.*exp')[10]
sword('space.*exp')
qs('pre').remove()
qs('table').querySelectorAll('a').forEach(a=>log(a.children))
qs('center').querySelectorAll('a')[0]
qs('center').querySelectorAll('a')
qa('*').reduce((acc,item) => {\n    if (item.tagName in acc) {\n        acc[item.tagName]++\n    }\n    else {\n        acc[item.tagName]=1\n    }\n    return acc}, [])
qa('*').reduce((acc,item) => {\n    if (item.tagName in acc) {\n        acc[item.tagName]++\n    }\n    else {\n        acc[item.tagName]=1\n    }\n    return acc}, {})
qa('link').forEach(a=>log(a))
qa('link').forEach(a=>log(a)
qa('link').forEach(a=>log(a.src))
qa('script').forEach(a=>log(a.className))
qa('[class]').forEach(a=>log(a.class))
copy(s.join(\"\\n\"))
copy(s)
qa('a').forEach(a=>s.push(`${a.href} ${a.textContent}`))
s=[]
qa('a').forEach(a=>log(`${a.href} ${a.textContent}`))
qa('a').forEach(a=>log(`${a.href} ${a.textContent}`)
qa('a').forEach(a=>log(`${a.href} ${a.textContent)`)
qa('a').forEach(a=>log(a))
newstory
q.onop
copy(s.join('\\n'))
for (a in q) {s.push([a, q[a]])}
q.hasAttribute
s.forEach(a=>log(a))
s
s[1]
for (a in q) {log(a)}
q.le
Object.keys(q)
qa('link')
copy(myscript)
add({a:myscript})
byClass
pr.textContent=myscript
myscript
fetch(qs('body').children[1].src)    .then((response) => response.text())\n    .then((data) => myscript = data);
let myscript
fetch(qs('body').children[1].src).then((x)=>x.textContent()).then((z)=>log(z))
fetch(qs('body').children[1].src).then((x)=>x.textContent).then((z)=>log(z))
fetch(qs('body').children[1].src).then(x=>x.textContent()).then(z=>log(z))
fetch(qs('body').children[1].src).then(x=>x.textContent).then(z=>log(z))
qs('body').children[1].src
af(qs('body').children).forEach(a=>log(a))
af(qs('head').children).forEach(a=>log(a))
qs('#div-02').childElementCount
[...qs('#div-02').children]
qs('#div-02').children
sword('-03').slice(3)[0].parentElement
sword('-03').slice(3)[0].innerHTML
sword('-03').slice(3).innerHTML
sword('-03').slice(3)
sword('-03').slice(4)
sword('-03').length
sword('-03')
el=qs(':not[id*=\"03]\"')
el=qs(':not[id*=\"03\"')
qa(':not(div)')
el.closest(':not(div)')
el.closest('#div-01')
el.closest('div')
el=qs('[id*=\"03\"')
qs('.poem').closest('div')
af(qa('script')).forEach(a=>log(a))
qs('head').remove()
qs('body').previousSibling.textContent=c
c
fetch('http://localhost:3000/style.css').then(a=>a.text()).then(z=>c=z)
let c
qs('body').previousSibling=\"The lady doth protest too much, methinks\"
qs('body').previousSibling
qs('body').previousSibling.textContent
qs('body').previousElementSibling
qs('body').classList
qs('pre').innerText=k.map((a,i)=>`${i} *** ${a[0]} *** ${a[1]}`).join('\\n')
qs('pre').innerText=k.map((a,i)=>`${i} <b>${a[0]}</b> ${a[1]}`).join('\\n')
qs('pre').innerText=k.map((a,i)=>`${i} ${a[0]} ${a[1]}`).join('\\n')
qs('pre').innerHTML=k.map((a,i)=>`${i} ${a[0]} ${a[1]}`).join('\\n')
qs('pre').innerHTML=k.map((a,i)=>`${i} ${a[0]} ${a[1]}`)
k.map((a,i)=>`${i} ${a[0]} ${a[1]}`)
document.querySelector('body').innerText
document.querySelector('body').onbeforeprint
q.onbeforeprint
k[13]
k.map(a=>`${a[0]} ${a[1]}`)
k.forEach(a=>log(a))
k[1]
for (a in q) k.push([a, q[a]]) 
k=[]
for (a in q) k.push(a, q[a]) 
q[k[1]]
for (a in qs('body')) k.push(a)
pr.textContent=qs('[class*=\"fit\"]').innerHTML
qs('[class*=\"fit\"]').innerHTML
qs('[class*=\"fit\"]')
qs('[class*=\"fil\"]').children[1].innerHTML='The lady doth protest too much, methinks'
qs('[class*=\"fil\"]').children
qs('[class*=\"fil\"]')
'i' in 'jim'
qs('button').style.display
hi()
qs('button')
qa('button')[0]
hi
qa('button')[0].addEventListener('click',hi)
qa('button')[0].addEventListener('click',hi())
let hi=()=>qs('pre').style.display=='block'? qs('pre').style.display='none' : qs('pre').style.display='block'
hi(0
qa('button').forEach(a=>log(a))
qa('button')
qa('button)
qs('pre').style.display=='block'? qs('pre').style.display='none' : qs('pre').style.display='block'
qs('pre').style.display='block'
qs('pre').style.display='content'
qs('pre').style.display='none'
add({1:c})
add(1:c)
add({1,c})
add(c)
add({a,c})
c=''
c=''\\
qa('link[href*=\"c\"]').forEach(a=>log(a.href))
qa('link[href*=\"c\"]').forEach(a=>log(a.href))[1]
qa('link[href*=\"c\"]').forEach(a=>log(a))
qa('[href*=\"c\"]').forEach(a=>log(a))
qa('[href=\"\"]').forEach(a=>log(a))
qa('[href=\"\"]').map(a=>a)
qa('[href=\"\"]')
qa('a')
qs('pre').style=\"position: sticky; top: 0; z-index: 100;\"
window.StyleSheet[1]
window.StyleSheet()
window.StyleSheet
copy(earr)
earr[1]
console.table(earr)
console.log(earr)
earr.forEach(a=>log(a))
earr
let earr = elements.map((a, i) => `${i}, ${a.tagName}, ${a.className}, ${a.id}, ${a.childElementCount}, ${a.outerHTML.length}`)
var script = document.createElement('script');\nscript.type = 'text/javascript';\nscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.11/beautify.js';\ndocument.head.appendChild(script);
  my=[]\nfor (a in qs('body')) my.push(a)\npr=document.createElement('pre')\npr.style=\"columns: 100px 4; column-rule: 1px solid #000; margin-top: -1.5rem; font-family: Arial, Helvetica, sans-serif; font-size: 8px; background-color: pink;\"\npr.innerHTML=my.map(a=>`<div>${a}</div>`).join('')\ndocument.body.prepend(pr)\n\n
my=[]\nfor (a in qs('body')) my.push(a)\npr=document.createElement('pre')\npr.style=\"columns: 100px 4; column-rule: 1px solid #000; margin-top: -1.5rem auto; font-family: Arial, Helvetica, sans-serif; font-size: 8px; background-color: pink;\"\npr.innerHTML=my.map(a=>`<div>${a}</div>`).join('')\ndocument.body.prepend(pr)
my=[]\nfor (a in qs('body')) my.push(a)\npr=document.createElement('pre')\npr.style=\"columns: 100px 4; column-rule: 1px solid #000; margin-top: -1.5rem auto; font-family: Arial, Helvetica, sans-serif; font-size: 8px; background-color: pink;\"\npr.textContent=my.map(a=>`<div>${a}</div>`).join('')\ndocument.body.prepend(pr)\n\n
document.body.prepend(myi)
pr.innerHTML=myi
myi=my.map(a=>`<div>${a}</div>`).join('')
myi=my.map(a=>`<div>${a}</div>`)
my
for (a in qs('body')) my.push(a)
my=[]
getComputedStyle(qs('body')).backgroundColor
qs('body').style.backgroundColor='#0ff'
qs('body').style.backgroundColor='#fff'
qs('body').style.backgroundColor=#fff;
getComputedStyle(qs('body').background)
qs('body').style.backgroundColor
d.style.columnCount=3
d.innerHTML=s.map(m=>`<div>${m}</div>`).join('')
d.innerHTML=s.map(m=>`<div>${m}</div>`)
s=s.filter(g=>!g[0].match(/\\d+/))
s.filter(g=>!g[0].match(/\\d+/))
s=Object.entries(getComputedStyle(qs('body')))
s=s.filter(g=>!g[0].match(/\\d+/)).forEach(a=>log(a))
d
d.innerHTML=''
s.filter(g=>!g[0].match(/\\d+/)).forEach(a=>log(a))
s.filter(g=>g[0].match(/\\d+/)).forEach(a=>log(a))
s.filter(g=>g[0].match(/\\d+/))
s.filter(g=>g.match(/\\d+/))
s.filter(g=>!g.match(/\\d+/))
s[1][0].match(/\\d+/)
d.innerHTML
d.innerHTML=ps
ps=s.map(a=>`<div>${a[0]} - ${a[1]}</div>`).join('')
d.style.columnCount=6
ps=s.map(a=>`<div>${a[0]} - ${a[1]}</div>`)
s.map(a=>`<div>${a[0]} - ${a[1]}</div>`)
s.map(a=>`${a[0]} - ${a[1]}`)[980]
s[970]
s.forEach(a=>log(a[0]))
s.slice(0,4).forEach(a=>log(a[0]))
s.slice(0,4).forEach(a=>log(a))
s.slice(0,4)
s[1][0]
kk[1][0]
kk[1]
kk.forEach(a=>log([a[0]]))
kk
s.forEach(a=>kk.push([a[0],a[1]]))
kk=[]
s.forEach(a=>log([a[0]]))
xx
s.map(xx=>`${xx[0]} - ${xx[1]}`)
s.forEach(a=>log([a[1]]))
s.forEach(a=>log([a[0],a[1]]))
s.forEach(a=>log(a[1]))
b
s=Object.valueOf(getComputedStyle(qs('body')))
for (a in s) log(a.valueOf())
s=Object.entries(getComputedStyle(qs('body'))).slice(0,4)
s=Object.entries(getComputedStyle(qs('body'))).slice(0,4
s=Object.entries(getComputedStyle(qs('body'))).slice(0,40
s.map(a=>`${a[0]} - ${a[1]}`)
s.forEach(a=log(a))
values(s[1])
values[1]
s=Object.values(getComputedStyle(qs('body')))
Object.values(s)[1]
Object.entries(s)[1]
Object.entries(s)
for (a in s) log(valueOf(a))
for (a in s) log(a)
s=Object.values(getComputedStyle(qs('body')).height)
s=Object.valueOf(getComputedStyle(qs('body')).height)
s=Object.entries(getComputedStyle(qs('body')))[1]
getComputedStyle(b).height
getComputedStyle(b).accentColor
s[0]
b=qs('body')
s=getComputedStyle(qs('body'))
Object.entries(qs('body').style).filter(a=>a[1].length>1)
Object.entries(qs('body').style).forEach(a=>log(a))
Object.entries(qs('body').style).slice(0,3).forEach(a=>log(a))
Object.entries(qs('body').style).slice(0,3)
Object.entries(qs('body').style)
qs('body').style.accentColor=\"blue\"
qs('body').style.accentColor
Object.keys(qs('body').style).forEach(a=>log(qs('body').style[a]))
Object.keys(qs('body').style)
Object.values(qs('body').style)
Object.values(computedStyle)
typeof Object
Object.constructor()
Object.constructor
for (a of Object) log(a)
for (a in Object) log(a)
Object.keys(computedStyle)
computedStyle.alignContent
computedStyle
var computedStyle = window.getComputedStyle(qs('body'));
var computedStyle = window.getComputedStyle(qs('body'); 
document.body.append(d)
d.innerHTML.replace('First','XXXXXXXXXXXXXX')
d.innerHTMl
d.innerHTM
d.innerHTM='xxx'
d.innerHTML=nn
nn=qs('section').innerHTML
d.outerHTML=nn
nn=qs('section').outerHTML
qs('section').outerHTML
qs('section').append(ms2)
ms2=qs('section').querySelector('*').cloneNode(true)
ms.style.color='rgb(255,0,0)'
ms
qs('section').append(ms)
ms=qs('section').querySelector('*').cloneNode(true)
document.body.prepend(ms)
document.body.prepend('ms')
ms=qs('section').querySelector('*')
qs('section').append(qs('section').querySelector('*'))
qs('section').appendChild(qs('section').querySelector('*'))
qs('section').querySelector('*')
qs('section').style.justifyContent='space-between'
console.dir(qs('section').style.justifyContent)
console.ldir(qs('section').style.justifyContent)
qs('section').style.justifyContent='space-around'
for ( a in qs('section').style.justifyContent) log(a)
for ( a in qs('header').style.justifyContent) log(a)
qs('article').style.cssText='color: rgba(0, 0, 255, 1.5)'
qs('article').style.cssText='color: rgba(0, 0, 255, .5)'
qs('article').style.cssText='color: rgba(0, 0, 255)'
qs('article').style.cssText='color: rgba(255, 0, 0)'
qs('article').style.cssText='color: rgb(255, 0, 0)'
qs('article').style.cssText='color: rgb(255, 255, 0)'
qs('article').style.cssText='color: rgb(0, 255, 0)'
qs('article').style.cssText
qs('article').style.cssText='color: #f00'
qs('article').style.cssText='rgb(0, 255, 0)'
qa('article').forEach((a,i)=>{if (i>1){a.remove()}} )
qa('article').forEach((a,i)=>{if (i>3){a.remove()}} )
qa('article').forEach((a,i)=>{if (i<3){a.remove()}} )
qa('article').forEach((a,i)=>{if (i<3){a.remove()}} 
qa('article')
qa
qa('article\")
qs('section').querySelectorAll('*').forEach((a,i)=>log([i, a.tagName, a.textContent]))
qs('section').querySelectorAll('*').forEach(a=>log([a.tagName, a.textContent]))
qs('section').querySelectorAll('*').forEach(a=>log(a.textContent))
qs('section').querySelectorAll('*').forEach(a=>log(a))
qs('section').children
qs('section').querySelectorAll('*')
qs('section').qa('*')
qs('section')
qa('style')
log(qs('style').textContent)
qs('style').textContent
qs('header').style.justifyContent
qs('header').style.justify-content
qs('header').style.justifySelf
qs('header').style
for (a in qs('header').style) {\n    if (a.match('jus')) {log(a)}}
for (a in qs('header').style) {\n    if (a.match('j')) {log(a)}}
for (a in qs('header')) {\n    if (a.match('j')) {log(a)}}
for (a in qs('header')) log(a)
$0.style.justifyContent='space-around'
$0.style.justifyContent='center'
$0.style
copy($0.href)
$0.href
qs('.xIZ6Le').children
qs('.xIZ6Le').outerHTML
qa('.xIZ6Le')
af(qs('body').children)[1].outerHTML
af(qs('body').children)[1].innerHTML
af(qs('body').children)[0].innerHTML
af(qs('body').children)[0]
af(qs('body').children).map((a,i)=>[i,a]).forEach(x=>log(x))
qa('script').forEach(a=>a.remove())
af(qs('body').children).map((a,i)=>[i,a])[1].forEach(x=>log(x))
af(qs('body').children).map((a,i)=>[i,a])[1]
af(qs('body').children).map((a,i)=>[i,a])
af(qs('body').children).map((a,i)=>log([i,a]))
af(qs('body').children).forEach((a,i)=>log([i,a]))
$0.innerHTML
copy($0.src)
$0.src
a[1]=999
c=[...a]
c[...a]
a[1]=99
[...a]
b=a
a=[1, 2, [4, 0]]
[1, 2, [4, 0]]
window.document.querySelector('a')
document.querySelector('.poem')
window.document.querySelector('body').innerHTML
document.querySelector('body').innerHTML
[...qs('body').children].forEach(a=>log([a.tagName, a.textContent.slice(0,10)].join(' - ')))
[...qs('body').children].forEach(a=>log([a.tagName, a.textContent.slice(0,10)].join(' - '))
[...qs('body').children].forEach(a=>log([a.tagName, a.textContent.slice(0,10)]).join(' - '))
[...qs('body').children].forEach(a=>log([a.tagName, a.textContent.slice(0,10)]).join(' - ')
[...qs('body').children].forEach(a=>log([a.tagName, a.textContent.slice(0,10)]))
[...qs('body').children].forEach(a=>log([a.tagName, a.textContent.slice(0,10)])
[...qs('body').children].forEach(a=>log(a.tagName, a.textContent.slice(0,10))
qs('body').children
qa('.garden')
qa('link[rel=\"stylesheet\"]').forEach(a=>log(a.href))
qa('link[rel=\"stylesheet\"]').forEach(a=>log(a))
qa('link[rel]').forEach(a=>log(a))
getComputedStyle($0.children[0])
$0.children
$0.style.background=''
$0.style.background='#b2b2b2'
$0.style.background='#440'
$0.style.background='#400'
qs('main').style=\"line-height: 2; text-align: left;\"
qs('main').innerHTML=te.map(a=>`<div>${a}</div>`).join(\"\")
fetch('https://raw.githubusercontent.com/wither7007/all_wsl/main/wasteland.txt').then(x=>x.text()).then(y=>te=y.trim().split(/\\s{2,}/))
qs('main').style.lineHeight='2.5'
qs('main').style.lineHeight='1.5'
qs('main').style.textAlign='left'
qs('main').style.textAlign=left
qs('main').innerHTML=te.map(a=>`<div>${a}</div>`)
te
te.split(/\\s{2,}/)
fetch('https://raw.githubusercontent.com/wither7007/all_wsl/main/wasteland.txt').then(x=>x.text()).then(y=>te=y.trim())
javascript: r = prompt("Enter Speed Rate - 0.25 to 16 "); document.getElementsByClassName("video-stream")[0].playbackRate = parseFloat(r);
