ls
ls > a
v a
vim a
sort a
cat a
ls 
ls -S
ll
ll -S
ll -Sr
ls -S >a
cat a
sort a
cat a
$$
ran=$$
echo $ran
for in in `seq 10`; do echo $in; done
env | rg -i 'edit'
env
env | rg -i 'food'
env | rg -i 'ed'
export EDITOR='vim'
vim .bashrc
his
alias v="vim"
jj
ls
lt
p
his
sudo apt -y install neovim
nvim
se 'neo'
nvim
se 'seq'
for in in `seq 10`; echo echo $in >>in;done
for in in `seq 10`;  echo $in >>in;done
for in in `seq 10`; do echo $in >>in;done
lt in
cat in
sort in
sort -n in
lt
cat duh
sort -n duh
sort -t' ' -k2 duh
ls | grep | 'a|s'
ls | grep  'a|s'
ls | egrep  'a|s'
ls | grep  'a.*t'
ls | egrep  'a.*t'
ps -ef|grep '[p]mon'|awk -F'ora_[p]mon_' '{print $NF}'|grep -Ev 'ASM|^$'
ps -ef|grep '[p]mon'|awk -F'ora_[p]mon_' 
ps
ld
rm -rf all/
duh
ld
se 'zsh'
history | wc -l
apps | grep 'fd'
ip
ipython
fd -epy
alias p3
fd -esh
rg 'p'
rgh
als
rgh
rg --help
fd -epy
fd -epy | xargs rg "os"
wi python
ls b
ls b*
python b.py 
time python b.py 
type -a time
type -a ls
type -a cloud
type -a rg
cat fun 
type -a sc
source fun
type -a shist
shist
shist ls
compgen -c | rg 'sh'
compgen -c | rg 'shis'
for s in $(compgen -c | rg 'shis'); do echo $s; done
for s in $(compgen -c | rg 'la'); do echo $s; done
wi mysqladmin
wi mysql
mysql â€“version
cd /etc/init.d/
lt
u
ld
fd -H -I 'mysql'
u
fd -H -I 'mysql'
fd -H -I 'mysql' | rg -v 'php'
dpkg -l
ls -a
env
se 'docker'
h3
compgen -c | rg 'shis'
wi sd
man sd
manv sd
lt | se '/s/a/xxxx/g'
lt | sed '/s/a/xxxx/g'
fd | sed '/s/a/xxxx/g'
fd
fd -d 1 | sed '/s/a/xxxx/g'
man sed
/usr/bin/time --version
/usr/bin/time
ls -lSh log.log*
hyperfine "apack log.log.apack.gz log.log" "gzip -k log.log" "zstd log.log" "brotli -3 log.log" --prepare="rm -fr log.log.*" --export-markdown log.compress.md
exit
his
exit
exit
tmux
exit
getConfiguredClient() {   if  command -v curl &>/dev/null; then     configuredClient="curl";   elif command -v wget &>/dev/null; then     configuredClient="wget";   elif command -v http &>/dev/null; then     configuredClient="httpie";   elif command -v fetch &>/dev/null; then     configuredClient="fetch";   else     echo "Error: This tool requires either curl, wget, httpie or fetch to be installed." >&2;     return 1;   fi; }
getConfiguredClient 
command
command -v curl
command -v wget
command -v ft
command -v fetch
checkInternet() {   httpGet github.com > /dev/null 2>&1 || { echo "Error: no active internet connection" >&2; return 1; } # query github with a get request
}
checkInternet 
httpGet
left
exit
apt install copyq
sudo apt install copyq
copyq
lt
gcloud auth list
gcloud config list project
gsutil cp
gcloud alpha storage buckets create gs://test
gcloud projects list
gcloud alpha storage buckets create gs://test
gcloud config set project youtube-325217
gcloud alpha storage buckets create gs://test
gcloud alpha storage buckets create gs://test2253
his
lt
ld
gsutil cp scripts gs://test2253
gsutil cp -r ~/scripts gs://test2253
gsutil cp -r duh gs://test2253
gcloud alpha storage ls
gcloud alpha storage ls --recursive gs://test2253
gcloud alpha storage cp gs://test2253/duh ~
lt
v duh
whoami
exit
ls -lart #test
exit
script history_log.txt
lt
v history_log.txt 
scriptreplay history_log.txt 
lt
w
man  w
man script
exit
7z
zip
zip --version
tar
left
src install.sh 
sc install.sh 
lt
duh
zip tues ~
lt
v tues.zip 
zip -r tues ~
lt
v tues.zip 
man rsync
se 'apt'
sudo apt -y install rsync
wi rsync
man rsync
find . -name "*.[sh]" -print | zip source -@
lt
find . -name "*.[sh]"
find . -name "*.sh"
h3
find . -name "*.sh" | zip source -@
lt
v source.zip 
fd -tf -esh
fd -tf -esh | zip sh -@
lt
v sh.zip 
lt
se 'change'
exit
h3
left
cat install
cat install.sh 
lt
sh install.sh 
his
ld
curl "https://github.com/wither7007/all/blob/main/.bash_history"
h3
wget "https://raw.githubusercontent.com/wither7007/all/main/.bash_history"
lt
la
lt -a
v .bash_history.1 
his
fd
fd -H -I
tree
duh
fdh
fd -H -I -E 'npm*'
fd -H -I -E '.npm*'
fd -H -I -E '.npm*' -E '.cache'
fd -H -I -E '.npm*' -E '.cache' -E '.the*'
fd -H -I -E '.npm*' -E '.cache' -E '.the*' | v -
fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
h3
fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
vifm
lt
ls *.zip
lt *.zip
v sh.zip 
v tues.zip 
se 'app'
apps
apps | grep '^x'
find ./ -mtime +14 -size +10k
find ./ -mtime +14 -size +10k -exec ls -l
find ./ -mtime +14 -size +10k -exec ls -l {}
find ./ -mtime +14 -size +10k -exec ls -l {} \;
ls
lt
lt | tr '\n' '|' 
lt | tr '\n' '\n\n' 
lt | tr '\n' '\t' 
lt | tr '\n' '' 
lt | tr '\n' ''
lt | tr '\n' 'xxxxxxxxxxxxxx'
lt | tr '\n' 'ji'
sudo apt install -y rsync
ld
mkdir -p ~/folder1/folder2~
ld
fd "fold"
mkdir -p ~/folder1/folder2
fd "fold"
rm -rf folder1/
ld
fd 'f*'
mkdir tarex && cd tarex
mkdir files && cd files
echo $'{0..10}'
echo $({0..10})
echo -e "Geeks \cfor Geeks"
echo -e "Geeks for Geeks"
echo -e "Geeks for \nGeeks"
echo file{0..100}.txt~
echo file{0..100}.txt
touch file{0..100}.txt
lt
rm *
lt
touch file{0..100}.txt
ls
u
ls -R
tar -cf files.tar files/
lt
v files.tar 
cd files/
lt
fd '01'
fd '1'
fd '1\.txt'
v '1\.txt'
lt
u
h3
tar -cf files.tar files/
lt
v files.tar 
cd files/
lt
cd tarex/
lt
v files.tar 
lt
v file57.txt 
lt
u
h3
tar cf files.tar files/
lt
v files.tar 
lt
lt -R
lt
h3
h3  | tail n 7
h3  | tail -n 7
h3  | tail -n 12
tar cfz files.tar.gz files/
lt
v files.tar.gz 
his
lt
ls
lt
v
his
who
ls
exit
exit
tmux
exit
left
whoami
fd 
pwd
d
lt
apps | v -
tmux
tmux ls
exit
tmux
fd 'con'
fd -H 'con'
fd -H -d 1 'con'
v .tmux.conf 
left
lt
h3
apps | grep 'fd'
fd
ll
ld
cd tarex/
lt
u
se 'tar'
h3
find app -name *.sh -o -name *.csv -o -name *.log 
find -name *.sh -o -name *.csv -o -name *.log 
find  *.sh -o -name *.csv -o -name *.log 
find  -name *.sh -o -name *.csv -o -name *.log 
find .  -name *.sh -o -name *.csv -o -name *.log 
find .
his

find . \( -type f -o -name '*.c' \)
lt
find . \( -type f -o -name '*.duh' \)
find .  -type f -o -name '*.duh' 
find .  -type d -o -name '*.duh' 
find .  -type d -o -name 'duh' 
find .  -type f -name 'duh' 
fd 'duh'
fd -tf 'duh'
time fd -tf 'duh'
his
time fd 'duh'
time fd -tf 'duh'
time fd -tf 'duh.*'
lt
ls | v -
v sh.zip 
lt
ls | v -
ls *.sh | v -
lt

lt
find . -type f > archiveFileList && tar -czf archive.tar.gz -T archiveFileList
lr
lt
rm archive.tar.gz 
lt
ls *.sh | v -
h3
lt
rm archiveFileList
lt
rm '*
lt
se 'fd'
ls
fd -d 1 'arch'
fd -d 1 'arch' -x rm {}
lt
ls *.sh | v -
lt
tar -czf ark.tar.gz -T Archive 
lt
v ark.tar.gz 
se 'fd'
fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
lt
v ark
h3
tar czf thr.tar.gz -T ark
lt
v thr.tar.gz 
v ark
cat ark
stat tarex/files/file93.txt 
v ark
se 'stat'
manv stat
man stat
stat --printf='Name: %n\nPermissions: %a\n' ark
stat --printf='Name: %n Permissions: %a\n' ark
man stat
stat --printf='Name: %n Size: %s\n' ark
v ark
lt
rm *.zip
lt
fdh
lt
rm thr.tar.gz 
fdh
fd -S +10M
fd -S +1M
fd -S +1k
fd -H -I -S +1k
fd -H -I -S +1M
fd -H -I -S +10M
his
fd -H -I -S +10M -x echo
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'
fd -H -I -S +10M -x stat --printf=' Size: %s\n'
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n' v -
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'| v -
fd -H -I -S +10M -x stat --printf='Name: %n \t Size: %s\n'| v -

v .cache/yarn/v6/npm-@swc-core-darwin-x64-1.2.233-c0ac776e8249e82037ebca91e0cad0a1c4392d1c-integrity/node_modules/@swc/core-darwin-x64/swc.darwin-x64.node
stat .cache/yarn/v6/npm-@swc-core-darwin-x64-1.2.233-c0ac776e8249e82037ebca91e0cad0a1c4392d1c-integrity/node_modules/@swc/core-darwin-x64/swc.darwin-x64.node
se 'stat'
v .bashrc 
history | wc -l
his
tmus ls
tmux ls
fd -H -I -S +10M -x stat --printf='%n \t Size: %s\n'| v -
his

hi
his

fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
ld
rm rf tarex/
rm -rf tarex/
lt
fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
lt
cat Efiles 
lt
while read line; do   echo $line; done < Efiles 
while read line; do   echo stat $line; done < Efiles 
while read line; do   echo `stat $line`; done < Efiles 
while read line; do   echo `du -h $line`; done < Efiles 
while read line; do   echo `du -h $line`; done < Efiles | v -
his
lt
his
tmux
lt
v good.txt 
tmux
lt
v ark.tar.gz 
rm ark.tar.gz 
lt
his
lt
se 'tar'
lt
v Efiles 
tar czf thr.tar.gz -T Efiles 
se 'tar'
tar -czf thr.tar.gz -T Efiles 
v Efiles 
tar -czf thr.tar.gz -T Efiles 
tar -czf thr.tar.gz -T Efiles
