
"
$$
./chis.sh 
./jj.sh "jim"
/usr/bin/time
/usr/bin/time --version
/usr/lib/cargo/ install sd
7z
MyString=123456qwerty
PROMPT_COMMAND='history -a'
a=$(fd -esh)
a=$(printf '%s\n" $(fd -esh)) 
a=$(printf '%s\n' $(fd -esh)) 
alias p3
alias v="vim"
alias | rg 'git'
alis wi
all_wsl/
als
apps
apps | grep '^x'
apps | grep 'fd'
apps | v -
apps| rg 'car'
apt install copyq
bash
bash vs.sh 
bind -m vi-insert '"\C-x\C-e": edit-and-execute-command'
bit diff kottkeLink.txt 
cargo install sd
cat .bash_history .bash_history | nl
cat .bash_history | cat .bash_history | nl
cat .bash_history | cat .bash_history | sort | uniq
cat .bash_history | cat .bash_history | sort | uniq | nl
cat .bash_history | sort | uniq
cat .bash_history | sort | uniq | wc
cat .git/HEAD 
cat Archive 
cat Efiles 
cat a
cat ark
cat bash_h9-8.txt >> all_wsl/gcloud_his
cat duh
cat fc.sh 
cat fun
cat fun 
cat gcloud_his | sort | uniq
cat gcloud_his | sort | uniq 
cat gcloud_his | sort | uniq > gcloud_his 
cat gcloud_his | sort | uniq > what
cat gcloud_his | sort | uniq >gcloud_his
cat in
cat inst
cat install
cat install.sh 
cat vs.sh 
cat ~/.bash_history | sort | uniq | >> all_wsl/gcloud_his
cat ~/.bash_history | sort | uniq | >> ~/all_wsl/gcloud_his
cat ~/.bash_history ~/all_wsl/gcloud_his | sort | uniq 
cat ~/.bash_history ~/all_wsl/gcloud_his | sort | uniq  >> ~/all_wsl/gcloud_his
cat ~/.bash_history ~/all_wsl/gcloud_his | sort | uniq | nl
cat ~/.inputrc
cat ~/fun
cd
cd .git/
cd /etc/init.d/
cd /usr/lib/cargo
cd all
cd all_wsl
cd all_wsl/
cd all_wsl/\
cd bin
cd files/
cd junk/
cd scripts/
cd tarex/
cd vs
cd vscode/
cd win
cd wsl
cd wsl2
cd wsl2/
cd wsl3/
cha
cha -2000
cha 0
cha 1
cha 10
cha 120
cha 2
cha 20
cha 2000
cha 250
cha 3
cha 300
cha 3000
cha 360
cha 360 > Efiles
cha 360 | rg -v 'theia'
cha 360\
cha 5
cha 50
cha 60
cha 60000
cha 90
cha 90\
cha(){ echo $1; }
cha(){ fdfind -H -I --changed-with $1mins; }
cha(){ fdfind -H -I --changed-within $1mins; }
checkInternet 
checkInternet() {   httpGet github.com > /dev/null 2>&1 || { echo "Error: no active internet connection" >&2; return 1; } # query github with a get request
chis.sh
chmd +x chis.sh 
chmod + x list.sh 
chmod +x chis.sh 
chmod +x jj.sh 
chmod +x list.sh 
cl
clear
cloud edit .bash_history
cls
cls 
cls; lt
cls; wait; \lt
cls; wait; lt
cls;printf '%s\n' $MyString \"is\(done\)
command
command -v curl
command -v fetch
command -v ft
command -v wget
compgen -c
compgen -c > googleFun.txt
compgen -c | column
compgen -c | rg 'sh'
compgen -c | rg 'shis'
compgen -c | v -
copyq
cp -r ..
cp -r wsl2/all_wsl wsl2/
cp .bash_history /mnt/c/all/whis.txt
cp .bash_history all_wsl/
cp .bash_history all_wsl/bash_history
cp settings.json ~/tmp
cp ~/tmp/settings.json vscode/
cs
csl
curl "https://github.com/wither7007/all/blob/main/.bash_history"
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/gcloud_his
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/gcloud_his"
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/gcloud_his" > ghist
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/whis" >whis
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/whis" whis
curl -s www.umn.edu
d
date
date >> daily_log.txt 2>&1
dater >> daily_log.txt 2>&1
docker exec -it some-wordpress /bin/bash
docker images
docker ls -a
docker ps -a
docker rm $(docker ps -a -q)
docker rmi $(docker images -q)
docker rmi $(docker ps -a -q)
docker run --name some-wordpress -p 8080:80 -d wordpress
docker stop $(docker ps -a -q)
dockr images
dos2unix
dpkg -l
du -hs $(la)
du -hs * | sort -h
duh
duh -hs $(la)
echo "$TERM"
echo "the sh extensions are $(fd -esh)"
echo $'{0..10}'
echo $(fd -esh)
echo $({0..10})
echo $MyString 
echo $MyString \"is
echo $MyString \"is\(done\)
echo $MyString:8
echo $a
echo $a > shells
echo $ran
echo ${MyString:6} 
echo ${MyString} 
echo 'export TERM=xterm-mon' >> ~/.bashrc 
echo -e "Geeks \cfor Geeks"
echo -e "Geeks for Geeks"
echo -e "Geeks for \nGeeks"
echo file{0..100}.txt
echo file{0..100}.txt~
echo {one,two,three,four}
env
env | rg -i 'ed'
env | rg -i 'edit'
env | rg -i 'food'
exit
exit\
export EDITOR='vim'
export TERM=xterm-mono
f fun 
fc -l
fc\
fd
fd 
fd "fold"
fd '01'
fd '1'
fd '1\.txt'
fd 'con'
fd 'duh'
fd 'f*'
fd 'google'
fd --changed-with 1days
fd --changed-within 1days
fd --changed-within 2days
fd --changed-within 2hours -x stat
fd --changed-within=1days
fd --changed-within=1hours
fd --full-path all_wsl/
fd --full-path all_wsl/ --changed-within 1days
fd -H
fd -H 'con'
fd -H -I
fd -H -I 'mysql'
fd -H -I 'mysql' | rg -v 'php'
fd -H -I --changed-within 1hours
fd -H -I --changed-within=1days
fd -H -I -E '.npm*'
fd -H -I -E '.npm*' -E '.cache'
fd -H -I -E '.npm*' -E '.cache' -E '.the*'
fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
fd -H -I -E '.npm*' -E '.cache' -E '.the*' | v -
fd -H -I -E 'npm*'
fd -H -I -S +10M
fd -H -I -S +10M -x echo
fd -H -I -S +10M -x stat --printf=' Size: %s\n'
fd -H -I -S +10M -x stat --printf='%n \t Size: %s\n'| v -
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n' v -
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'| v -
fd -H -I -S +10M -x stat --printf='Name: %n \t Size: %s\n'| v -
fd -H -I -S +1M
fd -H -I -S +1k
fd -H -I -d 1
fd -H -I -d 1 'git'
fd -H -I -d 1 'ignore'
fd -H -I -d 1 --changed-within=1hours
fd -H -I -d 1 --changed-within=1hours -x cat
fd -H -I -d 1 -td -x du -hs | rg '\d.*M\s' | sort -n
fd -H -I -d 1 -tf
fd -H -I -d 1 -tf  --changed-within=1hours -x ./list.sh
fd -H -I -d 1 -tf  --changed-within=1hours -x cat
fd -H -I -d 1 -tf  --changed-within=1hours -x echo
fd -H -I -d 1 -tf  --changed-within=1hours -x list.sh
fd -H -I -d 1 -tf | xargs ls -ltr
fd -H -I -d 1 -tf | xargs ls -ltrh
fd -H -I -td -x du -hs | rg '\d.*M\s' | sort 
fd -H -I -td -x du -hs | rg '\d.*M\s' | sort -n
fd -H -d 1 'con'
fd -I
fd -S +10M
fd -S +1M
fd -S +1k
fd -d 1 'ap'
fd -d 1 'ap'fd -d 1 'arc
fd -d 1 'arch'
fd -d 1 'arch' -x rm {}
fd -d 1 --changed-within 1days
fd -d 1 --changed-within 2days
fd -d 1 --changed-within 3days
fd -d 1 --modified-within=1hour
fd -d 1 --modified-within=1hours
fd -d 1 -ejson
fd -d 1 -ejson -exec mv {} all_wsl/vscode/
fd -d 1 -ejson -x echo
fd -d 1 -ejson -x mv all_wsl/vscode
fd -d 1 -ejson -x mv all_wsl/vscode/
fd -d 1 -esh
fd -d 1 -esh  -x   ./jj.sh 
fd -d 1 -esh  -x   ./jj.sh {}
fd -d 1 -esh | -exec   ./jj.sh {}
fd -d 1 -esh | xargs   ./jj.sh {}
fd -d 1 -esh | xargs   cat {}
fd -d 1 -esh | xargs  echo {}; cat {}
fd -d 1 -esh | xargs -I{} echo {}
fd -d 1 -esh | xargs -I{} echo {}; cat {}
fd -d 1 -td
fd -d 1 -tf
fd -d 1 -tf | column
fd -d 1 | sed '/s/a/xxxx/g'
fd -d 1 | xargs -I{} echo {}
fd -d 1 | xargs -I{} echo {} {}
fd -ejson
fd -ejson | xargs -I '{}' cp '{}' ~/play/
fd -ejson | xargs -I '{}' mv '{}' ~/all_wsl/vscode/
fd -epy
fd -epy | xargs rg "os"
fd -esh
fd -esh 
fd -esh -exec ./jj.sh {}
fd -esh -exec ./jj.sh {} \;
fd -esh -exec echo 
fd -esh -exec echo  \;
fd -esh -exec echo '{}'
fd -esh -exec echo '{}'\;
fd -esh -exec echo {} \;
fd -esh -x rg 'git'
fd -esh -x rg -H 'git'
fd -esh | xargs
fd -esh | xargs ./jj.sh 
fd -exec echo
fd -exec echo {}
fd -exec echo {} \;
fd -td
fd -td -x du -hs | rg '\d.*K\s' | sort 
fd -td -x du -hs | rg '\d.*M\s' | sort 
fd -tf
fd -tf 'duh'
fd -tf -esh
fd -tf -esh | zip sh -@
fd -tf | column
fd -x du -hs
fd -x du -hs | rg '/dM' | sort 
fd -x du -hs | rg '0K' | sort 
fd -x du -hs | rg 'DM' | sort 
fd -x du -hs | rg 'M' | sort 
fd -x du -hs | rg '\d' | sort 
fd -x du -hs | rg '\d.*K\s' | sort 
fd -x du -hs | rg '\d.*M' | sort 
fd -x du -hs | rg '\d.*M\s' | sort 
fd -x du -hs | rg '\d.*k\s' | sort 
fd -x du -hs | rg '\dK' | sort 
fd -x du -hs | rg '\dM' | sort 
fd -x du -hs | rg 'aM' | sort 
fd -x du -hs | rg 'dM' | sort 
fd -x du -hs | sort 
fd -x echo
fd -x echo {}
fd -x stat
fd . 'fun' all_wsl/ 
fd . 'fun' all_wsl/ | rg 'fun'
fd . all_wsl/
fd . all_wsl/ 'fun'
fd . all_wsl/ | rg 'fun'
fd . all_wsl/ | rg 'fun'fd . all_wsl/ | rg 'his'
fd . all_wsl/ | rg 'his'
fd all_wsl/
fd ejson
fd fun
fd | column 
fd | less
fd | sed '/s/a/xxxx/g'
fd | xargs echo
fd | xargs printf '%s\n'
fda
fday
fdfind -H -I --changed-within 1hours 
fdfind -H -I --changed-within 1hours | rg -v '\.git'
fdfind -H -I --changed-within 1hours | rg -v 'git'
fdfind -H i_ --changed-within 1hours 
fdh
find  *.sh -o -name *.csv -o -name *.log 
find  -name *.sh -o -name *.csv -o -name *.log 
find -name *.sh -o -name *.csv -o -name *.log 
find .
find .  -name *.sh -o -name *.csv -o -name *.log 
find .  -type d -o -name '*.duh' 
find .  -type d -o -name 'duh' 
find .  -type f -name 'duh' 
find .  -type f -o -name '*.duh' 
find . -name "*.[sh]"
find . -name "*.[sh]" -print | zip source -@
find . -name "*.sh"
find . -name "*.sh" | zip source -@
find . -type f > archiveFileList && tar -czf archive.tar.gz -T archiveFileList
find . -type f | xargs -I{} echo {} {}
find . \( -type f -o -name '*.c' \)
find . \( -type f -o -name '*.duh' \)
find ./ -mtime +14 -size +10k
find ./ -mtime +14 -size +10k -exec ls -l
find ./ -mtime +14 -size +10k -exec ls -l {}
find ./ -mtime +14 -size +10k -exec ls -l {} \;
find app -name *.sh -o -name *.csv -o -name *.log 
for in in `seq 10`;  echo $in >>in;done
for in in `seq 10`; do echo $in >>in;done
for in in `seq 10`; do echo $in; done
for in in `seq 10`; echo echo $in >>in;done
for n in {1..5}; do echo $n; done
for s in $(compgen -c | rg 'la'); do echo $s; done
for s in $(compgen -c | rg 'shis'); do echo $s; done
gb
gca 10
gca 300
gch 10
gch 20
gch 300
gch 360
gch 60
gclod edit ghist 
gcloud alpha storage buckets create gs://test
gcloud alpha storage buckets create gs://test2253
gcloud alpha storage cp gs://test2253/duh ~
gcloud alpha storage ls
gcloud alpha storage ls --recursive gs://test2253
gcloud auth list
gcloud config list project
gcloud config set project youtube-325217
gcloud edit .bash_history
gcloud edit ghist
gcloud projects list
get fetch
getConfiguredClient 
getConfiguredClient() {   if  command -v curl &>/dev/null; then     configuredClient="curl";   elif command -v wget &>/dev/null; then     configuredClient="wget";   elif command -v http &>/dev/null; then     configuredClient="httpie";   elif command -v fetch &>/dev/null; then     configuredClient="fetch";   else     echo "Error: This tool requires either curl, wget, httpie or fetch to be installed." >&2;     return 1;   fi; }
git -am "used alias on fd"
git -m "testing changes"
git -p
git add
git add - p hisback 
git add -p
git add -p hisback 
git add .
git add greek.txt 
git checkout -
git checkout 4b7117a
git checkout fd2d5
git clean -f
git clean -f -d
git clean -fd
git clean -n
git commit
git commit  -m 'added note about xargs'
git commit 'added note about xargs'
git commit -am "added days to note"
git commit -am "added settings"
git commit -am "added uniqhis"
git commit -am "used alias on fd"
git commit -m "Tuesday workout 1"
git commit -m "added aliases
git commit -m "added cloud functions"
git commit -m "added frumious"
git commit -m "combined old ghis"
git commit -m "combined old ghis'
git commit -m "gcloud_his"
git commit -m "more lines bs"
git commit -m "saturday his"
git commit -m "settings to vscode dir"
git commit -m "testing changes"
git commit -m 'another'
git commit -m 'bash_hist'
git commit -m 'fixed settings'
git commit -m 'sort unique'
git config
git diff
git diff ':(exclude)gcloud_his'
git diff ':(exclude)gcloud_hist'
git diff --cached
git diff --name-only 
git diff --name-only main origin/main 
git diff --name-only master origin/master 
git diff --staged
git diff --staged 
git diff --staged | v -
git diff hisback
git diff kottkeLink.txt
git diff kottkeLink.txt\
git diff main origin/main
git diff main origin/main 
git diff main origin/main | v -
git diff master origin/main
git diff | less
git diff | v -
git fetch
git fetch -v
git log
git log --format=%s
git log --oneline 
git log --oneline -n 3
git log --oneline -n 8
git log --oneline 10
git log -3
git log -n 3
git log -p
git log -p -1
git log -p -2
git log -p -2 | v -
git log -p -3 | v -
git log -p 1
git log -p 2 | v -
git log 10
git log 10 --oneline 
git log 2
git log 3
git log | less
git merge
git mergetool
git pull
git push
git remote -v
git reset --hard
git reset -hard
git show
git show ':(exclude)gcloud_his'
git show ':(exclude)gcloud_his' | v -
git show --abbrev-commit --pretty='oneline'
git show --pretty='full'
git show --pretty='medium'
git show --pretty='short'
git show --raw
git show 1f6d832
git show 4b117
git show 4b7117a
git show 55a31
git show 793ac
git show ba511
git show ba511 ':(exclude)gcloud_his'
git show ba511 | v -
git show | -
git show | v -
git state
git status
git switch -
gp
gst
gst 
gst\
gsutil cp
gsutil cp -r duh gs://test2253
gsutil cp -r ~/scripts gs://test2253
gsutil cp scripts gs://test2253
h3
h3  | tail -n 12
h3  | tail -n 7
h3  | tail n 7
hi
his
hism
history
history -a
history | wc -l
httpGet
hyperfine "apack log.log.apack.gz log.log" "gzip -k log.log" "zstd log.log" "brotli -3 log.log" --prepare="rm -fr log.log.*" --export-markdown log.compress.md
i3
ip
ipython
jj
l
la
la -r
la | grep 'it'
la | rg 'the'
ld
ld all_wsl/
ldr
left
ll
ll -S
ll -Sr
ll all_wsl/gcloud.*
ll all_wsl/gcloud_his 
lr
ls
ls 
ls *.json
ls *.sh
ls *.sh | v -
ls *.zip
ls *his*
ls -R
ls -S
ls -S >a
ls -a
ls -lSh log.log*
ls -lShrt
ls -lahrt
ls -lart #test
ls .git
ls .git/refs
ls > a
ls ??.sh
ls ???.sh
ls all_wsl/
ls all_wsl/vscode/
ls b
ls b*
ls fun*
ls fun*.*
ls ins*
ls play/
ls | egrep  'a.*t'
ls | egrep  'a|s'
ls | grep  'a.*t'
ls | grep  'a|s'
ls | grep | 'a|s'
ls | rg '\d'
ls | rg '\d.*t'
ls | rg '\dt'
ls | v -
lt
lt *.sh
lt *.zip
lt -R
lt -a
lt -a | rg -v "^d"
lt -a | rg -v "^d" | rg 'fun'
lt in
lt | rg '\d'
lt | rg chi
lt | se '/s/a/xxxx/g'
lt | sed '/s/a/xxxx/g'
lt | tr '\n' ''
lt | tr '\n' '' 
lt | tr '\n' '\n\n' 
lt | tr '\n' '\t' 
lt | tr '\n' 'ji'
lt | tr '\n' 'xxxxxxxxxxxxxx'
lt | tr '\n' '|' 
man  w
man rsync
man script
man sd
man sed
man stat
man wget
man zcat
manv 
manv sd
manv stat
manv wc
manv wget
md play
md tmp
md vscode
md win || cd win
md wsl3
mkdir -p ~/folder1/folder2
mkdir -p ~/folder1/folder2~
mkdir files && cd files
mkdir tarex && cd tarex
mv -r wsl2/all_wsl wsl2/
mv -rv wsl2/all_wsl wsl2/
mv -v all_wsl/ ~/
mv -v nn ~/
mv all_wsl/ 
mv all_wsl/ ~/wsl3/
mysql –version
nvim
p
printf $MyString \"is\(done\)
printf '%s\n" $(fd -esh)
printf '%s\n' $(fd -esh)
printf '%s\n' $MyString \"is\(done\)
printf '%s\n\n' $(fd -esh)
printf '%s\n\n' $(ls)
ps
ps -ef|grep '[p]mon'|awk -F'ora_[p]mon_' 
ps -ef|grep '[p]mon'|awk -F'ora_[p]mon_' '{print $NF}'|grep -Ev 'ASM|^$'
pwd
python b.py 
ran=$$
rg "Ef" bash_h9-8.txt 
rg "doc" bash_h9-8.txt 
rg "git.*dif" all_wsl/gcloud_his 
rg "git.*dif" bash_h9-8.txt 
rg "git.*dif" ~/bash_h9-8.txt 
rg "tar" bash_h9-8.txt 
rg 'dock' ghist
rg 'p'
rg --help
rg --max-depth 1 'git' | less
rg --max-depth 1 'ls'
rg --max-depth 1 'ls' | less
rg -helo
rg -help
rg frumious
rgh
rgh | v -
rm '*
rm *
rm *.gz
rm *.zip
rm -rf all/
rm -rf all_wsl/
rm -rf folder1/
rm -rf tarex/
rm -rf wsl2 wsl3
rm Archive Dockerfile Efiles 
rm ap.txt.old 
rm archive.tar.gz 
rm archiveFileList
rm ark duh.txt.old v.sh three two one.py 
rm ark.tar.gz 
rm buf.txt.old hist t.sh thr.tar.gz 
rm gcloud_his 
rm index.html daily_log.txt apps1 
rm jim
rm jj.sh 
rm jjj 
rm man nn one
rm nn
rm rf tarex/
rm shells.tar.gz 
rm thr.tar.gz 
rm vv
sc chis.sh
sc chis.sh 
sc fun
sc fun 
sc install
sc install.sh 
sc jt
sc ~/fun
sc ~/fun 
sc ~/install.sh 
script history_log.txt
scriptreplay history_log.txt 
se 'app'
se 'apt'
se 'change'
se 'cloud'
se 'docker'
se 'fd'
se 'fd\s'
se 'git log'
se 'his'
se 'modif'
se 'neo'
se 'ori.*main'
se 'seq'
se 'size'
se 'stat'
se 'tar'
se 'type'
se 'zsh'
set -o vi
sh chis.sh 
sh install.sh 
sh vs.sh 
sh vscode/vs.sh
sh vscode/vs.sh 
shist
shist ls
sort -n duh
sort -n in
sort -t' ' -k2 duh
sort -u .bash_history > .bash_history
sort a
sort in
source fun
src install.sh 
stat --printf='Name: %n Permissions: %a\n' ark
stat --printf='Name: %n Size: %s\n' ark
stat --printf='Name: %n\nPermissions: %a\n' ark
stat .cache/yarn/v6/npm-@swc-core-darwin-x64-1.2.233-c0ac776e8249e82037ebca91e0cad0a1c4392d1c-integrity/node_modules/@swc/core-darwin-x64/swc.darwin-x64.node
stat .gitconfig 
stat tarex/files/file93.txt 
stupid
sudo apt -y install neovim
sudo apt -y install rsync
sudo apt install -y rsync
sudo apt install copyq
t
tail .bashrc
take win
tar
tar -cf files.tar files/
tar -czf 20.tar.gz -T Efiles 
tar -czf ark.tar.gz -T Archive 
tar -czf shell.tar.gz -T shells
tar -czf shells.tar.gz -T $(fd -esh)
tar -czf thr.tar.gz -T Efiles
tar -czf thr.tar.gz -T Efiles 
tar cf files.tar files/
tar cfz files.tar.gz files/
tar czf thr.tar.gz -T Efiles 
tar czf thr.tar.gz -T ark
time fd 'duh'
time fd -tf 'duh'
time fd -tf 'duh.*'
time python b.py 
tmus ls
tmux
tmux kill-server
tmux ls
tocuh nn
touch all_w/gcloud_his
touch all_wsl/gcloud_his
touch dirty
touch dirty2
touch file{0..100}.txt
touch nn
touch vv
touch {1..10}
tree
type -a __git_checkout_default_dwim_mode
type -a __git_main
type -a __git_main | v -
type -a als
type -a cha
type -a cloud
type -a fd
type -a fday
type -a findfile
type -a go-outline
type -a hi
type -a his
type -a hism
type -a history
type -a ld
type -a ls
type -a revive
type -a rg
type -a sc
type -a shist
type -a time
type -a vi
type -a vim
type -f __git_checkout_default_dwim_mode
type -f cha
type -f fd
type -f groups
type -f hi
type -f his
type -f history
u
unalias rg
unalias vi
users
users | sed  '/s\s\+/\n/g'
users | sed  -e 's/\s\+/\n/g'
users | sed  -i 's/\s\+/\n/g'
users | sed  -i 's\/s\+/\n/g'
users | sed -i '/s\s\+/\n/g'
v
v '1\.txt'
v .bash_history
v .bash_history.1 
v .bashrc
v .bashrc 
v .cache/yarn/v6/npm-@swc-core-darwin-x64-1.2.233-c0ac776e8249e82037ebca91e0cad0a1c4392d1c-integrity/node_modules/@swc/core-darwin-x64/swc.darwin-x64.node
v .gitconfig 
v .ignore
v .tmux.conf 
v .viminfo 
v 20.tar.gz 
v Efiles 
v a
v all_wsl/gcloud_his 
v ark
v ark.tar.gz 
v bash_h9-8.txt 
v chis
v chis.sh
v chis.sh 
v daily_log.txt 
v duh
v file57.txt 
v files.tar 
v files.tar.gz 
v fu
v fun
v fun 
v fund
v gcloud_his 
v ghist
v ghist 
v good.txt 
v googleFun.txt 
v greek.txt 
v hisback
v hisback 
v hist
v history_log.txt 
v jim
v jj.sh
v jt
v keybindings 
v kottkeLink.txt 
v list.sh
v note/notes 
v pss
v settings.json 
v sh.zip 
v shell.tar.gz 
v shells
v shells.tar.gz 
v source.zip 
v thr.tar.gz 
v tues.zip 
v tx
v vs.sh 
v what
v what 
v whis
v whis 
v win/whis
v wsl
v ~/.bash_history
v ~/.gitconfig 
v ~/.inputrc
v ~/fun 
vi
vi his
vifm
vim .bashrc
vim a
w
wc vscode/global-state.json 
wget "https://raw.githubusercontent.com/wither7007/all/main/.bash_history"
whereis cargo
whereis dos2unix
whereis dos2unixss
whereis fd
while read line; do   echo $line; done < Efiles 
while read line; do   echo `du -h $line`; done < Efiles 
while read line; do   echo `du -h $line`; done < Efiles | v -
while read line; do   echo `stat $line`; done < Efiles 
while read line; do   echo stat $line; done < Efiles 
who
whoami
whos
whos | sed -i '/s\s\+/\n/g'
wi fd
wi fdfind
wi findfd
wi mysql
wi mysqladmin
wi python
wi rsync
wi sd
wither7007   56 Sep 20 18:44 shells
zip
zip --version
zip -r tues ~
zip tues ~

"
$$
7z
a=$(fd -esh)
a=$(printf '%s\n" $(fd -esh)) 
a=$(printf '%s\n' $(fd -esh)) 
alias fd
alias p3
alias r='fc -s'
alias | rg 'git'
alias v="vim"
alis wi
all_wsl/
als
apps
apps | grep 'fd'
apps | grep '^x'
apps| rg 'car'
apps | v -
apt install copyq
bash
bash vs.sh 
bind -m vi-insert '"\C-x\C-e": edit-and-execute-command'
bit diff kottkeLink.txt 
cargo install sd
cat a
cat Archive 
cat ark
cat bash_h9-8.txt >> all_wsl/gcloud_his
cat ~/.bash_history ~/all_wsl/gcloud_his | sort | uniq 
cat ~/.bash_history ~/all_wsl/gcloud_his | sort | uniq  >> ~/all_wsl/gcloud_his
cat ~/.bash_history ~/all_wsl/gcloud_his | sort | uniq | nl
cat .bash_history .bash_history | nl
cat .bash_history | cat .bash_history | nl
cat .bash_history | cat .bash_history | sort | uniq
cat .bash_history | cat .bash_history | sort | uniq | nl
cat .bash_history | sort | uniq
cat ~/.bash_history | sort | uniq | >> ~/all_wsl/gcloud_his
cat ~/.bash_history | sort | uniq | >> all_wsl/gcloud_his
cat .bash_history | sort | uniq | wc
cat chis
cat chis.sh 
cat duh
cat Efiles 
cat fc.sh 
cat ~/fun
cat fun
cat fun 
cat gcloud_his | sort | uniq
cat gcloud_his | sort | uniq 
cat gcloud_his | sort | uniq > gcloud_his 
cat gcloud_his | sort | uniq >gcloud_his
cat gcloud_his | sort | uniq > what
cat ghist 
cat .git/HEAD 
cat .gitignore 
cat .ignore 
cat in
cat ~/.inputrc
cat inst
cat install
cat install.sh 
cat j.sh 
cat list
cat list.sh 
cat vs.sh 
cd
cd all
cd all_wsl
cd all_wsl/
cd all_wsl/\
cd bin
cd /etc/init.d/
cd files/
cd .git/
cd junk/
cd scripts/
cd tarex/
cd /usr/lib/cargo
cd vs
cd vscode/
cd win
cd wsl
cd wsl2
cd wsl2/
cd wsl3/
cha
cha 0
cha 1
cha 10
cha 120
cha 2
cha 20
cha -2000
cha 2000
cha 2220
cha 250
cha 3
cha 300
cha 3000
cha 360
cha 360\
cha 360 > Efiles
cha 360 | rg -v 'theia'
cha 5
cha 50
cha 60
cha 60000
cha 60 -exec cat
cha 60 -x cat
cha 60 -x head
cha 90
cha 90\
cha(){ echo $1; }
cha(){ fdfind -H -I --changed-with $1mins; }
cha(){ fdfind -H -I --changed-within $1mins; }
checkInternet 
checkInternet() {   httpGet github.com > /dev/null 2>&1 || { echo "Error: no active internet connection" >&2; return 1; } # query github with a get request
./chis.sh 
chis.sh
chmd +x chis.sh 
chmod +x chis.sh 
chmod +x jj.sh 
chmod +x j.sh 
chmod + x list.sh 
chmod +x list.sh 
cl
clear
cloud edit .bash_history
cls
cls 
cls; lt
cls;printf '%s\n' $MyString \"is\(done\)
cls; wait; \lt
cls; wait; lt
command
command -v curl
command -v fetch
command -v ft
command -v wget
compgen -c
compgen -c | column
compgen -c > googleFun.txt
compgen -c | rg 'sh'
compgen -c | rg 'shis'
compgen -c | v -
copyq
cp .bash_history all_wsl/
cp .bash_history all_wsl/bash_history
cp .bash_history /mnt/c/all/whis.txt
cp .ignore .gitignore
cp -r ..
cp -r wsl2/all_wsl wsl2/
cp settings.json ~/tmp
cp ~/tmp/settings.json vscode/
cs
csl
curl "https://github.com/wither7007/all/blob/main/.bash_history"
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/gcloud_his
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/gcloud_his"
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/gcloud_his" > ghist
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/whis" >whis
curl -s "https://raw.githubusercontent.com/wither7007/all_wsl/main/whis" whis
curl -s www.umn.edu
d
date
date >> daily_log.txt 2>&1
dater >> daily_log.txt 2>&1
docker exec -it some-wordpress /bin/bash
docker images
docker ls -a
docker ps -a
docker rm $(docker ps -a -q)
docker rmi $(docker images -q)
docker rmi $(docker ps -a -q)
docker run --name some-wordpress -p 8080:80 -d wordpress
docker stop $(docker ps -a -q)
dockr images
dos2unix
dpkg -l
duh
duh -hs $(la)
du -hs $(la)
du -hs * | sort -h
echo $'{0..10}'
echo $({0..10})
echo $a
echo $a > shells
echo $ENV
echo $(fd -esh)
echo ${MyString} 
echo $MyString 
echo ${MyString:6} 
echo $MyString:8
echo $MyString \"is
echo $MyString \"is\(done\)
echo $ran
echo "$TERM"
echo -e "Geeks \cfor Geeks"
echo -e "Geeks for Geeks"
echo -e "Geeks for \nGeeks"
echo 'export TERM=xterm-mon' >> ~/.bashrc 
echo file{0..100}.txt
echo file{0..100}.txt~
echo {one,two,three,four}
echo "the sh extensions are $(fd -esh)"
ed
env
env | rg -i 'ed'
env | rg -i 'edit'
env | rg -i 'food'
exit
exit\
export EDITOR='vim'
export TERM=xterm-mono
fc\
fc -l
fd
fd 
fd '01'
fd '1'
fd '1\.txt'
fda
fda -d 1
fda -d 1 "ig"
fd . all_wsl/
fd all_wsl/
fd . all_wsl/ 'fun'
fd . all_wsl/ | rg 'fun'
fd . all_wsl/ | rg 'fun'fd . all_wsl/ | rg 'his'
fd . all_wsl/ | rg 'his'
fday
fdc
fd --changed-with 1days
fd --changed-within 1days
fd --changed-within=1days
fd --changed-within=1hours
fd --changed-within 2days
fd --changed-within 2hours -x stat
fd | column 
fd 'con'
fd -d 0
fd -d 0 -x rg 'git'
fd -d 1
fd -d 1 'ap'
fd -d 1 'ap'fd -d 1 'arc
fd -d 1 'arch'
fd -d 1 'arch' -x rm {}
fd -d 1 --changed-within 1days
fd -d 1 --changed-within 2days
fd -d 1 --changed-within 3days
fd -d 1 -ejson
fd -d 1 -ejson -exec mv {} all_wsl/vscode/
fd -d 1 -ejson -x echo
fd -d 1 -ejson -x mv all_wsl/vscode
fd -d 1 -ejson -x mv all_wsl/vscode/
fd -d 1 -epy
fd -d 1 -epy -x rm
fd -d 1 -esh
fd -d 1 -esh | -exec   ./jj.sh {}
fd -d 1 -esh | xargs   cat {}
fd -d 1 -esh | xargs  echo {}; cat {}
fd -d 1 -esh | xargs -I{} echo {}
fd -d 1 -esh | xargs -I{} echo {}; cat {}
fd -d 1 -esh | xargs   ./jj.sh {}
fd -d 1 -esh  -x   ./jj.sh 
fd -d 1 -esh  -x   ./jj.sh {}
fd -d 1 -exec ls
fd -d 1 -exec ls {}
fd -d 1 -exec ls {} \;
fd -d 1 -exec lt
fd -d 1 -H -I '.*nore.*'
fd -d 1 -H -I '.*nore.*' -x ls -l
fd -d 1 -H -I '.*nore.*' -x lt
fd -d 1 "*.ign"
fd -d 1 ".*ign"
fd -d 1 ".*ign.*"
fd -d 1 --modified-within=1hour
fd -d 1 --modified-within=1hours
fd -d 1 | rg 'git'
fd -d 1 | sed '/s/a/xxxx/g'
fd -d 1 -td
fd -d 1 -tf
fd -d 1 -tf | column
fd -d 1 -tf -x rg 'git'
fd -d 1 -tf -x rg -H 'git'
fd -d 1 -tf -x rg -H 'wsl.*git'
fd -d 1 | xargs -I{} echo {}
fd -d 1 | xargs -I{} echo {} {}
fd -d 1 -x rg 'git'
fd 'duh'
fd 'Ef'
fd > Efiles
fd -ejson
fd ejson
fd -ejson | xargs -I '{}' cp '{}' ~/play/
fd -ejson | xargs -I '{}' mv '{}' ~/all_wsl/vscode/
fd -epy
fd -epy | xargs rg "os"
fd -esh
fd -esh 
fd -esh -exec echo 
fd -esh -exec echo  \;
fd -esh -exec echo '{}'
fd -esh -exec echo '{}'\;
fd -esh -exec echo {} \;
fd -esh -exec ./jj.sh {}
fd -esh -exec ./jj.sh {} \;
fd -esh | xargs
fd -esh | xargs ./jj.sh 
fd -esh -x rg 'git'
fd -esh -x rg -H 'git'
fd -exec echo
fd -exec echo {}
fd -exec echo {} \;
fd 'f*'
fdfind
fdfind -H i_ --changed-within 1hours 
fdfind -H -I --changed-within 1hours 
fdfind -H -I --changed-within 1hours | rg -v '\.git'
fdfind -H -I --changed-within 1hours | rg -v 'git'
fd "fold"
fd --full-path all_wsl/
fd --full-path all_wsl/ --changed-within 1days
fd fun
fd . 'fun' all_wsl/ 
fd . 'fun' all_wsl/ | rg 'fun'
fd 'google'
fdh
fd -H
fd -H 
fd -H | column
fd -H 'con'
fd -H -d 1 'con'
fd -H -I
fd -H -I --changed-within=1days
fd -H -I --changed-within 1hours
fd -H -I -d 1
fd -H -I -d 1 --changed-within=1hours
fd -H -I -d 1 --changed-within=1hours -x cat
fd -H -I -d 1 | column
fd -H -I -d 1 'git'
fd -H -I -d 1 ".*ign.*"
fd -H -I -d 1 'ignore'
fd -H -I -d 1 '.*nor.*'
fd -H -I -d 1 '.*nor.*' -x ls -l
fd -H -I -d 1 '.*nor.*' -x ls -lh
fd -H -I -d 1 -td -x du -hs | rg '\d.*M\s' | sort -n
fd -H -I -d 1 -tf
fd -H -I -d 1 -tf  --changed-within=1hours -x cat
fd -H -I -d 1 -tf  --changed-within=1hours -x echo
fd -H -I -d 1 -tf  --changed-within=1hours -x ./list.sh
fd -H -I -d 1 -tf  --changed-within=1hours -x list.sh
fd -H -I -d 1 -tf | xargs ls -ltr
fd -H -I -d 1 -tf | xargs ls -ltrh
fd -H -I -E '.npm*'
fd -H -I -E 'npm*'
fd -H -I -E '.npm*' -E '.cache'
fd -H -I -E '.npm*' -E '.cache' -E '.the*'
fd -H -I -E '.npm*' -E '.cache' -E '.the*' -E '.vim'  | v -
fd -H -I -E '.npm*' -E '.cache' -E '.the*' | v -
fd -H -I 'mysql'
fd -H -I 'mysql' | rg -v 'php'
fd -H -I '.*nore.*"
fd -H -I '.*nore.*'
fd -H -I -S +10M
fd -H -I -S +10M -x echo
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n' v -
fd -H -I -S +10M -x stat --printf='Name: %n Size: %s\n'| v -
fd -H -I -S +10M -x stat --printf='Name: %n \t Size: %s\n'| v -
fd -H -I -S +10M -x stat --printf='%n \t Size: %s\n'| v -
fd -H -I -S +10M -x stat --printf=' Size: %s\n'
fd -H -I -S +1k
fd -H -I -S +1M
fd -H -I -td -x du -hs | rg '\d.*M\s' | sort 
fd -H -I -td -x du -hs | rg '\d.*M\s' | sort -n
fd -H -I | wc
fd -H -x du -h
fd -H -x du -h | v -
fd -I
fd -l
fd | less
fd | rg '.*his.*'
fd -S +10M
fd -S +1k
fd -S +1M
fd | sed '/s/a/xxxx/g'
fd 'set.*'
fd -td
fd -td -d 1 -exec ls {} \;
fd -td -x du -hs | rg '\d.*K\s' | sort 
fd -td -x du -hs | rg '\d.*M\s' | sort 
fd -tf
fd -tf | column
fd -tf -d 1 -exec ~/j.sh 
fd -tf -d 1 | xargs ~/j.sh 
fd -tf -d 1 | xargs printf '%s\n'
fd -tf -d 1 -x ~/j.sh 
fd -tf 'duh'
fd -tf -esh
fd -tf -esh | zip sh -@
fd -tf -exec ~/j.sh
fd -tf -exec ~/j.sh {}
fd -tf | xargs echo
fd -tf | xargs ~/j.sh 
fd -tf | xargs ~/j.sh {}
fd -tf | xargs printf '%s\n'
fd -tf -x echo
fd -tf -x head
fd -tf -x ~/j.sh
fd -tf -x j.sh
fd | wc
fd | xargs echo
fd | xargs printf '%s\n'
fd -x du -hs
fd -x du -hs | rg '0K' | sort 
fd -x du -hs | rg 'aM' | sort 
fd -x du -hs | rg '\dK' | sort 
fd -x du -hs | rg '\d.*k\s' | sort 
fd -x du -hs | rg '\d.*K\s' | sort 
fd -x du -hs | rg '/dM' | sort 
fd -x du -hs | rg '\d.*M' | sort 
fd -x du -hs | rg '\dM' | sort 
fd -x du -hs | rg 'dM' | sort 
fd -x du -hs | rg 'DM' | sort 
fd -x du -hs | rg '\d.*M\s' | sort 
fd -x du -hs | rg '\d' | sort 
fd -x du -hs | rg 'M' | sort 
fd -x du -hs | sort 
fd -x echo
fd -x echo {}
fd -x stat
f fun 
find .
find app -name *.sh -o -name *.csv -o -name *.log 
find ./ -mtime +14 -size +10k
find ./ -mtime +14 -size +10k -exec ls -l
find ./ -mtime +14 -size +10k -exec ls -l {}
find ./ -mtime +14 -size +10k -exec ls -l {} \;
find . -name "*.[sh]"
find . -name "*.sh"
find  -name *.sh -o -name *.csv -o -name *.log 
find -name *.sh -o -name *.csv -o -name *.log 
find .  -name *.sh -o -name *.csv -o -name *.log 
find . -name "*.[sh]" -print | zip source -@
find . -name "*.sh" | zip source -@
find  *.sh -o -name *.csv -o -name *.log 
find .  -type d -o -name '*.duh' 
find .  -type d -o -name 'duh' 
find . -type f > archiveFileList && tar -czf archive.tar.gz -T archiveFileList
find .  -type f -name 'duh' 
find . \( -type f -o -name '*.c' \)
find .  -type f -o -name '*.duh' 
find . \( -type f -o -name '*.duh' \)
find . -type f | xargs -I{} echo {} {}
for in in `seq 10`; do echo $in; done
for in in `seq 10`; do echo $in >>in;done
for in in `seq 10`;  echo $in >>in;done
for in in `seq 10`; echo echo $in >>in;done
for n in {1..5}; do echo $n; done
for s in $(compgen -c | rg 'la'); do echo $s; done
for s in $(compgen -c | rg 'shis'); do echo $s; done
free -h
gb
gca 10
gca 300
gch 10
gch 20
gch 300
gch 360
gch 60
gclod edit ghist 
gcloud alpha storage buckets create gs://test
gcloud alpha storage buckets create gs://test2253
gcloud alpha storage cp gs://test2253/duh ~
gcloud alpha storage ls
gcloud alpha storage ls --recursive gs://test2253
gcloud auth list
gcloud config list project
gcloud config set project youtube-325217
gcloud edit .bash_history
gcloud edit ghist
gcloud projects list
getConfiguredClient 
getConfiguredClient() {   if  command -v curl &>/dev/null; then     configuredClient="curl";   elif command -v wget &>/dev/null; then     configuredClient="wget";   elif command -v http &>/dev/null; then     configuredClient="httpie";   elif command -v fetch &>/dev/null; then     configuredClient="fetch";   else     echo "Error: This tool requires either curl, wget, httpie or fetch to be installed." >&2;     return 1;   fi; }
get fetch
git add
git add .
git add greek.txt 
git add -p
git add - p hisback 
git add -p hisback 
git -am "used alias on fd"
git branch
git checkout -
git checkout 4b7117a
git checkout fd2d5
git clean -f
git clean -f -d
git clean -fd
git clean -n
git commit
git commit 'added note about xargs'
git commit -am "added days to note"
git commit -am "added settings"
git commit -am "added uniqhis"
git commit -am "removed zzz"
git commit -am "uniqued"
git commit -am "used alias on fd"
git commit -m "added aliases
git commit -m "added cloud functions"
git commit -m "added frumious"
git commit  -m 'added note about xargs'
git commit -m 'added viminfo ignore'
git commit -m 'another'
git commit -m 'bash_hist'
git commit -m "combined old ghis"
git commit -m "combined old ghis'
git commit -m 'fixed settings'
git commit -m "gcloud_his"
git commit -m "initial commit"
git commit -m "more lines bs"
git commit -m "new docker"
git commit -m "saturday his"
git commit -m "settings to vscode dir"
git commit -m 'sort unique'
git commit -m "testing changes"
git commit -m "Tuesday workout 1"
git commit -m "updated aliases with nvim to vim"
git config
git diff
git diff --cached
git diff ':(exclude).bash_history'
git diff ':(exclude)bash_history'
git diff ':(exclude)gcloud_his'
git diff ':(exclude)gcloud_hist'
git diff hisback
git diff kottkeLink.txt
git diff kottkeLink.txt\
git diff | less
git diff main orging/main
git diff main origin/main
git diff main origin/main 
git diff main origin/main --name-only 
git diff main origin/main | v -
git diff master origin/main
git diff --name-only
git diff --name-only 
git diff --name-only main origin/main 
git diff --name-only master origin/master 
git diff --oneline
git diff --online
git diff --staged
git diff --staged 
git diff --staged | v -
git diff | v -
git fetch
git fetch -v
git init
git log
git log 10
git log 10 --oneline 
git log 2
git log -3
git log 3
git log --format=%s
git log | less
git log -n 3
git log --oneline
git log --oneline 
git log --oneline 10
git log --oneline | head
git log --oneline -n 3
git log --oneline -n 8
git log --online
git log -p
git log -p -1
git log -p 1
git log -p -2
git log -p -2 | v -
git log -p 2 | v -
git log -p -3 | v -
git merge
git mergetool
git -m "testing changes"
git -p
git pull
git push
git remote -v
git reset --hard
git reset -hard
git rm --cached .viminfo 
git rm .viminfo 
git show
git show | -
git show 1f6d832
git show 4b117
git show 4b7117a
git show 55a31
git show 793ac
git show --abbrev-commit --pretty='oneline'
git show ba511
git show ba511 ':(exclude)gcloud_his'
git show ba511 | v -
git show ':(exclude)gcloud_his'
git show ':(exclude)gcloud_his' | v -
git show --pretty='full'
git show --pretty='medium'
git show --pretty='short'
git show --raw
git show | v -
git state
git status
git switch -
glst
gp
gst
gst 
gst\
gst | v -
gsutil cp
gsutil cp -r duh gs://test2253
gsutil cp -r ~/scripts gs://test2253
gsutil cp scripts gs://test2253
h3
h3\
h3als
h3  | tail -n 12
h3  | tail -n 7
h3  | tail n 7
head jj.sh 
head snip
hi
his
hism
history
history -a
history | wc -l
httpGet
hyperfine "apack log.log.apack.gz log.log" "gzip -k log.log" "zstd log.log" "brotli -3 log.log" --prepare="rm -fr log.log.*" --export-markdown log.compress.md
i3
ip
ipython
jj
./jj.sh "jim"
./j.sh 1
./j.sh "jim"
l
la
la | grep 'it'
la -r
la | rg 'the'
ld
ld all_wsl/
ldr
left
ll
ll all_wsl/gcloud.*
ll all_wsl/gcloud_his 
ll -S
ll -Sr
ln -s .ignore .gitignore
lr
ls
ls 
ls -a
ls > a
ls all_wsl/
ls all_wsl/vscode/
ls -a | rg 'node'
ls b
ls b*
ls | egrep  'a|s'
ls | egrep  'a.*t'
ls fun*
ls fun*.*
ls g*
ls .git
ls .git/refs
ls | grep  'a|s'
ls | grep | 'a|s'
ls | grep  'a.*t'
ls *.gz
ls *his*
ls .ignore 
ls ins*
ls *.json
ls -lahrt
ls -lart #test
ls -lSh log.log*
ls -lShrt
ls play/
ls *.py
ls -R
ls | rg '\d'
ls | rg '\d.*t'
ls | rg '\dt'
ls | rg 'node'
ls -S
ls -S >a
ls *.sh
ls ??.sh
ls ???.sh
ls *.sh | v -
ls | v -
ls *.zip
lt
lt -a
lt -a | rg -v "^d"
lt -a | rg -v "^d" | rg 'fun'
lt in
lt -R
lt | rg chi
lt | rg '\d'
lt | sed '/s/a/xxxx/g'
lt | se '/s/a/xxxx/g'
lt *.sh
lt | tr '\n' ''
lt | tr '\n' '' 
lt | tr '\n' '|' 
lt | tr '\n' 'ji'
lt | tr '\n' '\n\n' 
lt | tr '\n' '\t' 
lt | tr '\n' 'xxxxxxxxxxxxxx'
lt *.zip
man rsync
man script
man sd
man sed
man stat
manv 
manv sd
manv stat
manv wc
manv wget
man  w
man wget
man zcat
md play
md tmp
md vscode
md win || cd win
md wsl3
mkdir files && cd files
mkdir -p ~/folder1/folder2
mkdir -p ~/folder1/folder2~
mkdir tarex && cd tarex
mv all_wsl/ 
mv all_wsl/ ~/wsl3/
mv -rv wsl2/all_wsl wsl2/
mv -r wsl2/all_wsl wsl2/
mv -v all_wsl/ ~/
mv -v nn ~/
mysql –version
MyString=123456qwerty
nvim
p
printenv
printf $MyString \"is\(done\)
printf '%s\n" $(fd -esh)
printf '%s\n' $(fd -esh)
printf '%s\n' $MyString \"is\(done\)
printf '%s\n\n' $(fd -esh)
printf '%s\n\n' $(ls)
printf '%s\n' "the path is $PATH"
PROMPT_COMMAND='history -a'
ps
ps -ef|grep '[p]mon'|awk -F'ora_[p]mon_' 
ps -ef|grep '[p]mon'|awk -F'ora_[p]mon_' '{print $NF}'|grep -Ev 'ASM|^$'
pwd
python b.py 
ran=$$
r colu
rg "doc" bash_h9-8.txt 
rg 'dock' ghist
rg "Ef" bash_h9-8.txt 
rg frumious
rg "git.*dif" all_wsl/gcloud_his 
rg "git.*dif" ~/bash_h9-8.txt 
rg "git.*dif" bash_h9-8.txt 
rgh
rg -helo
rg --help
rg -help
rgh | v -
rg --max-depth 1 'git' | less
rg --max-depth 1 'ls'
rg --max-depth 1 'ls' | less
rg 'p'
rg "tar" bash_h9-8.txt 
rg 'tar' hist.bak 
rg 'tar' hist.bak bash_h9-8.txt 
rm '*
rm *
rm ap.txt.old 
rm Archive Dockerfile Efiles 
rm archiveFileList
rm archive.tar.gz 
rm ark duh.txt.old v.sh three two one.py 
rm ark.tar.gz 
rm buf.txt.old hist t.sh thr.tar.gz 
rm  Efiles 
rm gcloud_his 
rm .gitignore 
rm *.gz
rm index.html daily_log.txt apps1 
rm jim
rm jjj 
rm jj.sh 
rm list.sh
rm man nn one
rm nn
rm -rf all/
rm -rf all_wsl/
rm -rf folder1/
rm -rf .git
rm -rf tarex/
rm rf tarex/
rm -rf wsl2 wsl3
rm shells.tar.gz 
rm thr.tar.gz 
rm vv
rm *.zip
sc .bash_aliases 
sc chis.sh
sc chis.sh 
sc ~/fun
sc ~/fun 
sc fun
sc fun 
sc install
sc ~/install.sh 
sc install.sh 
sc jt
script history_log.txt
scriptreplay history_log.txt 
se 'app'
se 'apt'
se 'change'
se 'cloud'
se 'docker'
se 'exec'
se 'fd'
se 'fd\s'
se 'git log'
se 'his'
se 'modif'
se 'neo'
se 'ori.*main'
se 'seq'
se 'size'
se 'stat'
se 'tar'
set -o vi
se 'type'
se 'zsh'
sh chis.sh 
sh install.sh 
shist
shist ls
sh vscode/vs.sh
sh vscode/vs.sh 
sh vs.sh 
sort a
sort in
sort -n duh
sort -n in
sort -t' ' -k2 duh
sort -u .bash_history > .bash_history
source fun
src install.sh 
stat .cache/yarn/v6/npm-@swc-core-darwin-x64-1.2.233-c0ac776e8249e82037ebca91e0cad0a1c4392d1c-integrity/node_modules/@swc/core-darwin-x64/swc.darwin-x64.node
stat .gitconfig 
stat --printf='Name: %n\nPermissions: %a\n' ark
stat --printf='Name: %n Permissions: %a\n' ark
stat --printf='Name: %n Size: %s\n' ark
stat tarex/files/file93.txt 
stupid
sudo apt install copyq
sudo apt install -y rsync
sudo apt -y install neovim
sudo apt -y install rsync
t
tail .bashrc
take win
tar
tar -cf files.tar files/
tar cf files.tar files/
tar cfz files.tar.gz files/
tar -czf 20.tar.gz -T Efiles 
tar -czf ark.tar.gz -T Archive 
tar -czf shells.tar.gz -T $(fd -esh)
tar -czf shell.tar.gz -T shells
tar czf thr.tar.gz -T ark
tar -czf thr.tar.gz -T Efiles
tar -czf thr.tar.gz -T Efiles 
tar czf thr.tar.gz -T Efiles 
tar -czvf ~/wsl.tar.gz .
time fd 'duh'
time fd -tf 'duh'
time fd -tf 'duh.*'
time python b.py 
tmus ls
tmux
tmux kill-server
tmux ls
tocuh nn
touch {1..10}
touch all_w/gcloud_his
touch all_wsl/gcloud_his
touch chis.sh 
touch dirty
touch dirty2
touch file{0..100}.txt
touch nn
touch vv
tree
type -a als
type -a cha
type -a cloud
type -a fd
type -a fday
type -a findfile
type -a __git_checkout_default_dwim_mode
type -a __git_main
type -a __git_main | v -
type -a go-outline
type -a hi
type -a his
type -a hism
type -a history
type -a ld
type -a ls
type -a revive
type -a rg
type -a sc
type -a shist
type -a time
type -a vi
type -a vim
type cha
type -f cha
type fd
type -f fd
type -f __git_checkout_default_dwim_mode
type -f groups
type -f hi
type -f his
type -f history
u
unalias rg
unalias vi
users
users | sed  -e 's/\s\+/\n/g'
users | sed  -i 's/\s\+/\n/g'
users | sed  -i 's\/s\+/\n/g'
users | sed -i '/s\s\+/\n/g'
users | sed  '/s\s\+/\n/g'
/usr/bin/time
/usr/bin/time --version
/usr/lib/cargo/ install sd
v
v .
v '1\.txt'
v 20.tar.gz 
v a
v all_wsl/gcloud_his 
v ark
v ark.tar.gz 
v .bash_aliases 
v bash_h9-8.txt 
v .bash_history
v ~/.bash_history
v .bash_history.1 
v .bashrc
v .bashrc 
v .cache/yarn/v6/npm-@swc-core-darwin-x64-1.2.233-c0ac776e8249e82037ebca91e0cad0a1c4392d1c-integrity/node_modules/@swc/core-darwin-x64/swc.darwin-x64.node
v chis
v chis.sh
v chis.sh 
v daily_log.txt 
vdiff () {     if [ "${#}" -ne 2 ] ; then         printf "vdiff requires two arguments";         echo "  comparing dirs:  vdiff dir_a dir_b";         echo "  comparing files: vdiff file_a file_b";         return 1;     fi     local left="${1}";     local right="${2}"     if [ -d "${left}" ] && [ -d "${right}" ]; then         vim +"DirDiff ${left} ${right}";     else         vim -d "${left}" "${right}";     fi; }
vdiff .ignore .gitignore 
v duh
v Efiles 
v file57.txt 
v files.tar 
v files.tar.gz 
v fu
v ~/fun 
v fun
v fun 
v fund
v gcloud_his
v gcloud_his 
v ghist
v ghist 
v .gitconfig 
v ~/.gitconfig 
v .gitignore 
v good.txt 
v googleFun.txt 
v greek.txt 
v hisback
v hisback 
v hist
v history_log.txt 
vi
vifm
v .ignore
v .ignore 
vi his
vim a
vim .bash_aliases 
vim .bashrc
vimdiff .ignore .gitignore 
v ~/.inputrc
v jim
v jj.sh
v j.sh
v j.sh 
v jt
v keybindings 
v kottkeLink.txt 
v list.sh
v note/notes 
v pss
v settings.json 
v shells
v shells.tar.gz 
v shell.tar.gz 
v sh.zip 
v source.zip 
v thr.tar.gz 
v .tmux.conf 
v tues.zip 
v tx
v vdiff
v .viminfo 
v vs.sh 
v what
v what 
v whis
v whis 
v win/whis
v wsl
v wsl.tar.gz 
w
wc vscode/global-state.json 
wget "https://raw.githubusercontent.com/wither7007/all/main/.bash_history"
whereis cargo
whereis dos2unix
whereis dos2unixss
whereis fd
while read line; do   echo $line; done < Efiles 
while read line; do   echo `du -h $line`; done < Efiles 
while read line; do   echo `du -h $line`; done < Efiles | v -
while read line; do   echo `stat $line`; done < Efiles 
while read line; do   echo stat $line; done < Efiles 
who
whoami
whos
whos | sed -i '/s\s\+/\n/g'
wi fd
wi fdfind
wi findfd
wi mysql
wi mysqladmin
wi python
wi rsync
wi sd
wither7007   56 Sep 20 18:44 shells
zip
zip -r tues ~
zip tues ~
zip --version
